#!/bin/bash
# shellcheck disable=SC2034,SC1090

set -x

###############################################################################
# INITIALIZE
###############################################################################
: "${WORKSPACE:=$(pwd)}"

. "$WORKSPACE/ci.bash"
. "$WORKSPACE/juju.bash"

###############################################################################
# FUNCTION OVERRIDES
###############################################################################
function juju::deploy
{
   tee overlay.yaml <<EOF > /dev/null
series: $SERIES
applications:
  kubernetes-control-plane:
    options:
      channel: $SNAP_VERSION
      allow-privileged: true
  kubernetes-worker:
    constraints: 'instance-type=c4.xlarge root-disk=16G'
    options:
      channel: $SNAP_VERSION
EOF

    juju model-config -m "$JUJU_CONTROLLER:$JUJU_MODEL" default-series="$SERIES"
    juju deploy -m "$JUJU_CONTROLLER:$JUJU_MODEL" \
         --overlay overlay.yaml \
         --force \
         --channel "$JUJU_DEPLOY_CHANNEL" "$JUJU_DEPLOY_BUNDLE"
    juju deploy -m "$JUJU_CONTROLLER:$JUJU_MODEL" -n 3 ceph-mon --channel="$CEPH_CHANNEL"
    juju deploy -m "$JUJU_CONTROLLER:$JUJU_MODEL" -n 3 ceph-osd --channel="$CEPH_CHANNEL" \
         --constraints="root-disk=32G" \
         --storage osd-devices=8G,1 \
         --storage osd-journals=8G,1
    juju add-relation -m "$JUJU_CONTROLLER:$JUJU_MODEL" ceph-osd ceph-mon
    juju add-relation -m "$JUJU_CONTROLLER:$JUJU_MODEL" ceph-mon:client kubernetes-control-plane
}

function juju::deploy::after
{
    python $WORKSPACE/jobs/integration/sriov_aws.py
    juju scp -m "$JUJU_CONTROLLER:$JUJU_MODEL" \
          kubernetes-control-plane/0:config "kubeconfig"
    export KUBECONFIG="kubeconfig"
    juju add-k8s k8s --controller "$JUJU_CONTROLLER"
    juju add-model -c "$JUJU_CONTROLLER" addons k8s --config test-mode=true
    juju deploy -m "$JUJU_CONTROLLER:addons" \
          --series=${SERIES} \
          --channel "$JUJU_DEPLOY_CHANNEL" sriov-cni
    juju deploy -m "$JUJU_CONTROLLER:addons" \
          --series=${SERIES} \
          --channel "$JUJU_DEPLOY_CHANNEL" sriov-network-device-plugin
    juju config -m "$JUJU_CONTROLLER:addons" sriov-network-device-plugin resource-list="
- resourceName: sriov
  selectors:
    drivers:
    - ixgbevf"
    timeout 45m juju-wait -e "$JUJU_CONTROLLER:addons" -w
}

function test::execute
{
    declare -n is_pass=$1
    timeout -s INT 2h pytest \
        --html="report.html" \
        --full-trace \
        jobs/integration/validation.py \
        --cloud "$JUJU_CLOUD" \
        --model "$JUJU_MODEL" \
        --controller "$JUJU_CONTROLLER" \
        --addons-model addons
    ret=$?
    is_pass="True"
    if (( $ret > 0 )); then
        is_pass="False"
    fi
}

function ci::cleanup::before
{
    juju destroy-model -y --destroy-storage "$JUJU_CONTROLLER:addons" || true
}

###############################################################################
# ENV
###############################################################################
SNAP_VERSION=${1:-1.26/edge}
SERIES=${2:-jammy}
CEPH_CHANNEL=${5:-quincy/stable}
JUJU_DEPLOY_BUNDLE=charmed-kubernetes
JUJU_DEPLOY_CHANNEL=${3:-edge}
JUJU_CLOUD=aws/us-east-1
JUJU_CONTROLLER=validate-$(identifier::short)
JUJU_MODEL=validate-sriov
ARCH=${4:-amd64}
JOB_NAME_CUSTOM="validate-ck-sriov-$SERIES-$SNAP_VERSION"
JOB_ID=$(identifier)

###############################################################################
# START
###############################################################################
ci::run
