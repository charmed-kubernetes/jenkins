#!/bin/bash
# shellcheck disable=SC2034,SC1090

set -x

###############################################################################
# INITIALIZE
###############################################################################
: "${WORKSPACE:=$(pwd)}"

. "$WORKSPACE/ci.bash"
. "$WORKSPACE/juju.bash"

###############################################################################
# FUNCTION OVERRIDES
###############################################################################
function juju::deploy::overlay
{
    local constraints
    constraints="arch=$ARCH cores=2 mem=8G root-disk=16G"

    tee overlay.yaml <<EOF > /dev/null
series: $SERIES
applications:
  kubernetes-control-plane:
    constraints: $constraints
    channel: $JUJU_DEPLOY_CHANNEL
    options:
      channel: $SNAP_VERSION
      allow-privileged: "true"
  kubernetes-worker:
    constraints: $constraints
    channel: $JUJU_DEPLOY_CHANNEL
    options:
      channel: $SNAP_VERSION
  calico: null
  containerd:
    options:
      no_proxy: "localhost,127.0.0.1,::1,10.246.154.0/24,10.152.183.0/24,192.168.0.0/16"
  kube-ovn:
    charm: kube-ovn
    channel: $JUJU_DEPLOY_CHANNEL
  ceph-mon:
    charm: ceph-mon
    channel: $CEPH_CHANNEL
    num_units: 3
  ceph-osd:
    charm: ceph-osd
    channel: $CEPH_CHANNEL
    constraints: "root-disk=32G"
    num_units: 3
    storage:
      osd-devices: 8G,1
      osd-journals: 8G,1
relations:
  - [kube-ovn:cni, kubernetes-control-plane:cni]
  - [kube-ovn:cni, kubernetes-worker:cni]
  - [ceph-osd:mon, ceph-mon:osd]
  - [ceph-mon:client, kubernetes-control-plane:ceph-client]
EOF
}

function juju::deploy::after
{
    juju scp -m "$JUJU_CONTROLLER:$JUJU_MODEL" \
          kubernetes-control-plane/0:config "kubeconfig"
    export KUBECONFIG="kubeconfig"
    juju add-k8s k8s --controller "$JUJU_CONTROLLER"
    juju add-model -c "$JUJU_CONTROLLER" addons k8s --config test-mode=true
    juju deploy -m "${JUJU_CONTROLLER}:addons" \
          --channel "$JUJU_DEPLOY_CHANNEL" multus --trust
    timeout 45m juju-wait -e "${JUJU_CONTROLLER}:addons" -w
}

function test::execute
{
    declare -n is_pass=$1
    timeout -s INT 2h pytest \
        --html="report.html" \
        --full-trace \
        jobs/integration/validation.py \
        --cloud "$JUJU_CLOUD" \
        --model "$JUJU_MODEL" \
        --controller "$JUJU_CONTROLLER" \
        --addons-model addons
    ret=$?
    is_pass="True"
    if (( $ret > 0 )); then
        is_pass="False"
    fi
}

function ci::cleanup::before
{
    juju destroy-model -y --destroy-storage "$JUJU_CONTROLLER:addons" || true
}


###############################################################################
# ENV
###############################################################################
SNAP_VERSION=${1:-1.26/stable}
SERIES=${2:-jammy}
CEPH_CHANNEL=${5:-quincy/stable}
JUJU_DEPLOY_BUNDLE=charmed-kubernetes
JUJU_DEPLOY_CHANNEL=${3:-edge}
JUJU_CLOUD=vsphere/Boston
JUJU_CONTROLLER=validate-$(identifier::short)
JUJU_MODEL=validate-ovn-multus
ARCH=${4:-amd64}
JOB_NAME_CUSTOM="validate-ck-ovn-multus-$SERIES-$ARCH-$SNAP_VERSION"
JOB_ID=$(identifier)

###############################################################################
# START
###############################################################################
ci::run
