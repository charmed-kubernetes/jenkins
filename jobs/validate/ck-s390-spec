#!/bin/bash
# shellcheck disable=SC2034,SC1090

set -x

# Init
: "${WORKSPACE:=$(pwd)}"

. "$WORKSPACE/ci.bash"
. "$WORKSPACE/juju.bash"

function juju::bootstrap
{
    echo "skip bootstrap on s390x"
}

function juju::wait
{
    echo "skip juju wait on s390x"
}

function juju::deploy
{
    tee overlay.yaml <<EOF> /dev/null
series: $SERIES
applications:
  kubernetes-control-plane:
    options:
      channel: $SNAP_VERSION
  kubernetes-worker:
    options:
      channel: $SNAP_VERSION
EOF


    tee setup <<EOF> /dev/null
#!/bin/bash
set -eux
export PATH=/snap/bin:$PATH
export JUJU_CONTROLLER=$JUJU_CONTROLLER
export JUJU_MODEL=$JUJU_MODEL
export JUJU_CLOUD=$JUJU_CLOUD
export JUJU_DEPLOY_CHANNEL=$JUJU_DEPLOY_CHANNEL
export SNAP_VERSION=$SNAP_VERSION
export SERIES=$SERIES
export LC_ALL=C.UTF-8
export LANG=C.UTF-8

juju bootstrap localhost/localhost \
    $JUJU_CONTROLLER \
    -d $JUJU_MODEL \
    --bootstrap-series $SERIES \
    --force \
    --config juju-http-proxy=http://squid.internal:3128 \
    --config juju-https-proxy=http://squid.internal:3128 \
    --config juju-no-proxy=localhost,127.0.0.1,::1,10.23.105.0/24 \
    --model-default image-stream=daily \
    --model-default juju-http-proxy=http://squid.internal:3128 \
    --model-default juju-https-proxy=http://squid.internal:3128 \
    --model-default juju-no-proxy=localhost,127.0.0.1,::1,10.23.105.0/24 \
    --model-default automatically-retry-hooks=true

juju deploy -m "$JUJU_CONTROLLER":"$JUJU_MODEL" \
    --channel $JUJU_DEPLOY_CHANNEL \
    --force \
    --overlay overlay.yaml \
    charmed-kubernetes

timeout 45m juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w

pushd jenkins
timeout -s INT 3h tox -e py36 -- pytest \
    --full-trace \
    jobs/integration/validation.py \
    --cloud localhost \
    --model $JUJU_MODEL \
    --controller $JUJU_CONTROLLER
EOF
    chmod +x setup
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa setup ubuntu@10.13.6.3:setup
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa overlay.yaml ubuntu@10.13.6.3:overlay.yaml
}

function test::execute {
    declare -n is_pass=$1
    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- bash setup
    ret=$?
    is_pass="True"
    if (( $ret > 0 )); then
        is_pass="False"
    fi
}

function ci::cleanup::before
{
    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- /snap/bin/juju-crashdump -s -a debug-layer -a config -m "$JUJU_CONTROLLER:$JUJU_MODEL"
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -r ubuntu@10.13.6.3:juju-crashdump* . || true
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -r ubuntu@10.13.6.3:jenkins/*.log . || true
    scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -r ubuntu@10.13.6.3:jenkins/*.html . || true

    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- rm -rf juju-crashdump* || true
    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- timeout 2m juju destroy-controller -y --destroy-all-models --destroy-storage "$JUJU_CONTROLLER"
    ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i /var/lib/jenkins/.ssh/cdkbot_rsa -tt ubuntu@10.13.6.3 -- timeout 10m juju kill-controller -y "$JUJU_CONTROLLER"
}

###############################################################################
# Setup Environment
###############################################################################
SNAP_VERSION=${1:-1.24/edge}
SERIES=${2:-focal}
JUJU_DEPLOY_BUNDLE=charmed-kubernetes
JUJU_DEPLOY_CHANNEL=${3:-edge}
JUJU_CLOUD=localhost/localhost
JUJU_CONTROLLER=validate-$(identifier::short)
JUJU_MODEL=validate-localhost
ARCH=${4:-amd64}
JOB_NAME_CUSTOM="validate-ck-s390x-$SERIES-$SNAP_VERSION"
JOB_ID=$(identifier)

ci::run
