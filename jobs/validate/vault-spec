#!/bin/bash
# shellcheck disable=SC2034,SC1090

set -x

# Init
: "${WORKSPACE:=$(pwd)}"

. "$WORKSPACE/ci.bash"
. "$WORKSPACE/juju.bash"

# Override bootstrap to use a single subnet vpc
# function juju::bootstrap
# {
#     juju bootstrap "$JUJU_CLOUD" "$JUJU_CONTROLLER" \
#          -d "$JUJU_MODEL" \
#          --bootstrap-series "$SERIES" \
#          --force \
#          --bootstrap-constraints arch="$ARCH" \
#          --model-default test-mode=true \
#          --model-default resource-tags=owner=k8sci \
#          --model-default image-stream=daily \
#          --model-default vpc-id=vpc-0e4f11d0d4e9ba35f \
#          --model-default automatically-retry-hooks=true \
#          --config vpc-id=vpc-0e4f11d0d4e9ba35f
# }

function juju::deploy::overlay
{
    cat <<EOF > overlay.yaml
series: $SERIES
applications:
  kubernetes-master:
    options:
      channel: $SNAP_VERSION
  kubernetes-worker:
    options:
      channel: $SNAP_VERSION
  easyrsa: null
  vault:
    charm: cs:vault
    num_units: 2
    options:
      auto-generate-root-ca-cert: true
      disable-mlock: true
  percona-cluster:
    charm: cs:percona-cluster
    series: bionic
    num_units: 1
    options:
      innodb-buffer-pool-size: 256M
      max-connections: 1000
relations:
  - ["vault:certificates", "kubernetes-master:certificates"]
  - ["vault:certificates", "kubernetes-worker:certificates"]
  - ["vault:certificates", "kubeapi-load-balancer:certificates"]
  - ["vault:certificates", "etcd:certificates"]
  - ["vault:shared-db", "percona-cluster:shared-db"]
  - ["vault:etcd", "etcd:db"]
  - ["kubernetes-master:vault-kv", "vault:secrets"]
EOF
}

function now_min
{
    echo $(( $(date '+%s') / 60 ))
}

function juju::wait
{
    # Cluster status won't be stable because Vault requires manual unsealing.
    return
}

function test::execute
{
    declare -n is_pass=$1
    timeout -s INT 2h pytest \
        --html="report.html" \
        --full-trace \
        jobs/integration/validation.py::test_encryption_at_rest \
        --cloud "$JUJU_CLOUD" \
        --model "$JUJU_MODEL" \
        --controller "$JUJU_CONTROLLER" \
        --addons-model addons
    ret=$?
    is_pass="True"
    if (( ret > 0 )); then
        is_pass="False"
    fi
}



# Setup Environment

SNAP_VERSION=${1:-1.23/edge}
SERIES=${2:-bionic}
JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
JUJU_DEPLOY_CHANNEL=${3:-edge}
JUJU_CLOUD=vsphere/Boston
JUJU_CONTROLLER=validate-$(identifier::short)
JUJU_MODEL=validate-vault
ARCH=${4:-amd64}
JOB_NAME_CUSTOM="validate-ck-vault-$SERIES-$SNAP_VERSION"
JOB_ID=$(identifier)

ci::run
