#!/bin/bash
# shellcheck disable=SC2034,SC1090

set -x

###############################################################################
# INITIALIZE
###############################################################################
: "${WORKSPACE:=$(pwd)}"

. "$WORKSPACE/ci.bash"
. "$WORKSPACE/juju.bash"

###############################################################################
# FUNCTION OVERRIDES
###############################################################################
# Override bootstrap to use a single subnet vpc
# function juju::bootstrap
# {
#     juju bootstrap "$JUJU_CLOUD" "$JUJU_CONTROLLER" \
#          -d "$JUJU_MODEL" \
#          --force --bootstrap-series "$SERIES" \
#          --bootstrap-constraints arch="amd64" \
#          --model-default test-mode=true \
#          --model-default resource-tags=owner=k8sci \
#          --model-default image-stream=daily \
#          --model-default vpc-id=vpc-0e4f11d0d4e9ba35f \
#          --model-default automatically-retry-hooks=true \
#          --config vpc-id=vpc-0e4f11d0d4e9ba35f
# }

function juju::deploy::overlay
{
    cat <<EOF > overlay.yaml
series: $SERIES
applications:
  kubernetes-control-plane:
    options:
      channel: $SNAP_VERSION
  kubernetes-worker:
    options:
      channel: $SNAP_VERSION
  easyrsa: null
  mysql-innodb-cluster:
    channel: 8.0/stable
    charm: mysql-innodb-cluster
    constraints: cores=2 mem=8G root-disk=64G
    num_units: 3
    options:
      enable-binlogs: true
      innodb-buffer-pool-size: 256M
      max-connections: 2000
      wait-timeout: 3600
  vault:
    channel: 1.7/stable
    charm: vault
    num_units: 2
    options:
      auto-generate-root-ca-cert: true
      disable-mlock: true
  vault-mysql-router:
    channel: 8.0/stable
    charm: mysql-router
relations:
  - ["vault:certificates", "etcd:certificates"]
  - ["vault:certificates", "kubeapi-load-balancer:certificates"]
  - ["vault:certificates", "kubernetes-control-plane:certificates"]
  - ["vault:certificates", "kubernetes-worker:certificates"]
  - ["vault-mysql-router:db-router", "mysql-innodb-cluster:db-router"]
  - ["vault-mysql-router:shared-db", "vault:shared-db"]
  - ["vault:etcd", "etcd:db"]
  - ["vault:secrets", "kubernetes-control-plane:vault-kv"]
EOF
}

function now_min
{
    echo $(( $(date '+%s') / 60 ))
}

function juju::wait
{
    # Cluster status won't be stable because Vault requires manual unsealing.
    return
}

function test::execute
{
    declare -n is_pass=$1
    timeout -s INT 2h pytest \
        --html="report.html" \
        --full-trace \
        jobs/integration/validation.py::test_encryption_at_rest \
        --cloud "$JUJU_CLOUD" \
        --model "$JUJU_MODEL" \
        --controller "$JUJU_CONTROLLER" \
        --addons-model addons
    ret=$?
    is_pass="True"
    if (( ret > 0 )); then
        is_pass="False"
    fi
}

###############################################################################
# ENV
###############################################################################
SNAP_VERSION=${1:-1.25/edge}
SERIES=${2:-focal}
JUJU_DEPLOY_BUNDLE=charmed-kubernetes
JUJU_DEPLOY_CHANNEL=${3:-edge}
JUJU_CLOUD=vsphere/Boston
JUJU_CONTROLLER=validate-$(identifier::short)
JUJU_MODEL=validate-vault
ARCH=${4:-amd64}
JOB_NAME_CUSTOM="validate-ck-vault-$SERIES-$SNAP_VERSION"
JOB_ID=$(identifier)

###############################################################################
# START
###############################################################################
ci::run
