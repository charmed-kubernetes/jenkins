# SCM ------------------------------------------------------------------------ #
- scm:
    name: k8s-jenkins-jenkaas
    scm:
      - git:
          url: https://github.com/charmed-kubernetes/kubernetes-jenkins.git
          branches:
            - 'master'
        skip-tag: true
        fastpoll: true
        shallow-clone: true
        clean: {before: true}

- scm:
    name: k8s-jenkins-bm
    scm:
      - git:
          url: https://github.com/battlemidget/kubernetes-jenkins.git
          branches:
            - 'stokes-ogc'
        skip-tag: true
        fastpoll: true
        shallow-clone: true
        clean: {before: true}


# PROPERTIES ----------------------------------------------------------------- #
# Dont run jobs if a release, charm building, or infrastructure changes are
# happening
- property:
    name: block-on-build-release
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-jobs:
            - "release"
            - "build-charms"
            - "build-bundles"
            - "infra*"
          block-level: 'GLOBAL'
          queue-scanning: 'ALL'

# Dont run release job if builds are happening
- property:
    name: block-on-release
    properties:
      - build-blocker:
          use-build-blocker: true
          blocking-jobs:
            - ".*build.*"
          block-level: 'GLOBAL'
          queue-scanning: 'ALL'


# PARAMETERS ----------------------------------------------------------------- #
- parameter:
    name: global-params
    parameters:
      - string:
          name: RUN_ID
          description: |
            This should be a uniquely identifiable run tag so that
            subsequent runs can query any previous state if available. This
            allows passing jobs to be bypassed and only the failed job be run
            again.
      - choice:
          name: BUILD_NODE
          description: |
            List of Jenkins nodes for performing tests
          choices:
            - runner-amd64-1
            - runner-amd64-2
            - runner-ppc64le
            - runner-s390x
            - runner-arm64
      - bool:
          name: DRY_RUN
          default: false
          description: dry-run nothing is actually done


- parameter:
    name: snap-params
    parameters:
      - string:
          name: SNAP_LIST
          default: jobs/build-snaps/k8s-snap-list.yaml
      - string:
          name: SNAP_PATCHES_LIST
      - bool:
          name: SNAP_FORCE
          default: false

- parameter:
    name: test-params
    parameters:
      - string:
          name: TEST_UPGRADE_SNAP_CHANNEL
          description: |
            Version of Kubernetes to upgrade to, in the form of
            <major>.<minor>/<channel> (ie, 1.16/edge).
          default: '1.16/candidate'
      - string:
          name: TEST_UPGRADE_CHARM_CHANNEL
          description: |
            Charmstore channel of the bundle to upgrade to.
          default: 'candidate'
      - string:
          name: TEST_UPGRADE_SNAPD_CHANNEL
          description: |
            Snap store channel of snapd to upgrade to.
          default: 'beta'

- parameter:
    name: juju-params
    parameters:
      - string:
          name: SNAP_VERSION
          description: |
            Version of Kubernetes to test against, in the form of
            <major>.<minor>/<channel> (ie, 1.16/edge).
          default: '1.16/edge'
      - string:
          name: JUJU_CONTROLLER
          default: 'validate-ck'
          description: |
            The Juju controller to create and reference during run.
      - string:
          name: JUJU_MODEL
          default: 'validate'
          description: |
            The Juju model to create and reference during run.
      - string:
          name: JUJU_CLOUD
          default: 'aws/us-east-2'
          description: |
            The Juju cloud to create and reference during run.
      - string:
          name: JUJU_BOOTSTRAP_CONSTRAINTS
          description: |
            Juju bootstrap constraints (ie, 'arch=amd64')
          default: 'arch=amd64'
      - bool:
          name: JUJU_BOOTSTRAP_DEBUG
          default: false
          description: |
            Juju bootstrap with debugging output.
      - bool:
          name: JUJU_BOOTSTRAP_DISABLE_ADD_MODEL
          default: false
          description: |
            Disable creating JUJU_MODEL after bootstrap. Useful if model
            configuration changes need to take place prior.
      - string:
          name: JUJU_DEPLOY_BUNDLE
          description: |
            The Juju bundle to deploy.
          default: "cs:~containers/charmed-kubernetes"
      - string:
          name: JUJU_DEPLOY_CHANNEL
          default: 'edge'
          description: |
            The Juju bundle channel to deploy from (ie, stable, candidate, beta, edge).
      - string:
          name: JUJU_DEPLOY_OVERLAY
          description: |
            Path to a YAML overlay bundle fragment

- parameter:
    name: charm-params
    parameters:
      - string:
          name: LAYER_INDEX
          default: 'https://charmed-kubernetes.github.io/layer-index/'
      - string:
          name: LAYER_LIST
          default: "jobs/build-charms/charm-layer-list.yaml"
      - string:
          name: LAYER_BRANCH
          default: 'master'
          description: |
            The layer git branch to checkout prior to building
      - string:
          name: CHARM_BRANCH
          default: 'master'
          description: |
            The charm git branch to checkout prior to building
      - string:
          name: CHARM_LIST
          default: "jobs/build-charms/charm-list.yaml"
      - string:
          name: BUNDLE_LIST
          default: "jobs/build-charms/charm-bundles-list.yaml"
      - string:
          name: BUNDLE_REPO
          default: "https://github.com/charmed-kubernetes/bundle-canonical-kubernetes.git"
      - string:
          name: RESOURCE_SPEC
          default: "jobs/build-charms/resource-spec.yaml"
      - string:
          name: TO_CHANNEL
          default: 'edge'
          description: Channel to publish charm to
      - string:
          name: FILTER_BY_TAG
          default: 'k8s'
          description: |
            Filter the builds by tag (ie. k8s). A tag can also be the name of a
            charm you want to individually build.
      - string:
          name: CHARM_BUILD_DIR
          default: 'build/charms'
      - string:
          name: CHARM_LAYERS_DIR
          default: 'build/layers'
      - string:
          name: CHARM_INTERFACES_DIR
          default: 'build/interfaces'


# BUILDERS ------------------------------------------------------------------- #
- builder:
    name: set-env
    builders:
      - shell: |-
          #!/bin/bash
          set -eux

          # Login to snapstore
          snapcraft login --with /var/lib/jenkins/snapcraft-creds

          rm -rf $WORKSPACE/.env || true

          export VIRTUAL_ENV_DISABLE_PROMPT=1
          export PYTHONPATH="{JOB_SPEC_DIR}"
          export GIT_SSH_COMMAND='"ssh -i $HOME/.ssh/cdkbot_rsa -oStrictHostKeyChecking=no"'
          export CHARM_BUILD_DIR="$WORKSPACE/${{CHARM_BUILD_DIR:-build/charms}}"
          export CHARM_LAYERS_DIR="$WORKSPACE/${{CHARM_LAYERS_DIR:-build/layers}}"
          export CHARM_INTERFACES_DIR="$WORKSPACE/${{CHARM_INTERFACES_DIR:-build/interfaces}}"
          export CHARM_CACHE_DIR=$WORKSPACE/tmp/.charm
          export PATH=/var/lib/jenkins/venvs/$JOB_NAME-$BUILD_NUMBER/bin:/snap/bin:$PATH
          export NODE_LABELS='"$NODE_LABELS"'
          export TMPDIR="$WORKSPACE/tmp"

          rm -rf "$TMPDIR" && mkdir -p "$TMPDIR"

          env > $WORKSPACE/.env

          virtualenv /var/lib/jenkins/venvs/$JOB_NAME-$BUILD_NUMBER -p python3.6

          . /var/lib/jenkins/venvs/$JOB_NAME-$BUILD_NUMBER/bin/activate
          pip install -rrequirements.txt
          pip install -rrequirements_test.txt

- builder:
    name: unset-env
    builders:
      - shell: |-
          #!/bin/bash
          set -eux
          rm -rf /var/lib/jenkins/venvs/$JOB_NAME-$BUILD_NUMBER

- builder:
    name: charm-build
    builders:
      - shell: |-
          #!/bin/bash
          set -eux
          set -o allexport
          [[ -f $WORKSPACE/.env ]] && source $WORKSPACE/.env
          set +o allexport

          . /var/lib/jenkins/venvs/$JOB_NAME-$BUILD_NUMBER/bin/activate

          rm -rf "$CHARM_BUILD_DIR" && mkdir -p "$CHARM_BUILD_DIR"
          rm -rf "$CHARM_LAYERS_DIR" && mkdir -p "$CHARM_LAYERS_DIR"
          rm -rf "$CHARM_INTERFACES_DIR" && mkdir -p "$CHARM_INTERFACES_DIR"

          ogc --spec {JOB_SPEC_DIR}/{JOB_SPEC_FILE} --debug execute -t build-charms
          ogc --spec {JOB_SPEC_DIR}/{JOB_SPEC_FILE} --debug execute -t build-bundles

- builder:
    name: ogc-execute-spec
    builders:
      - shell: |-
          #!/bin/bash
          set -eux
          set -o allexport
          [[ -f $WORKSPACE/.env ]] && source $WORKSPACE/.env
          set +o allexport

          . /var/lib/jenkins/venvs/$JOB_NAME-$BUILD_NUMBER/bin/activate

          ogc --spec {JOB_SPEC_DIR}/{JOB_SPEC_FILE} --debug execute {JOB_TAGS}


# WRAPPERS ------------------------------------------------------------------- #
- wrapper:
    name: default-job-wrapper
    wrappers:
      - ansicolor
      - timestamps
      - workspace-cleanup

- wrapper:
    name: ci-creds
    wrappers:
      - credentials-binding:
          - username-password-separated:
              credential-id: k8s_team_ci_lp
              username: K8STEAMCI_USR
              password: K8STEAMCI_PSW
          - username-password-separated:
              credential-id: cdkbot_github
              username: CDKBOT_GH_USR
              password: CDKBOT_GH_PSW
          - file:
              credential-id: launchpad_creds
              variable: LPCREDS
          - file:
              credential-id: charm_creds
              variable: CHARMCREDS
          - file:
              credential-id: juju_creds
              variable: JUJUCREDS
          - file:
              credential-id: sso_token
              variable: SSOCREDS
          - file:
              credential-id: snapcraft_creds
              variable: SNAPCRAFTCREDS
          - file:
              credential-id: aws_creds
              variable: AWSCREDS
          - file:
              credential-id: snapcraft_cpc_creds
              variable: SNAPCRAFTCPCCREDS
          - file:
              credential-id: cdkbot_ssh_rsa
              variable: CDKBOTSSHCREDS
          - text:
              credential-id: NEADER
              variable: NEADER
          - text:
              credential-id: S3LP3
              variable: S3LP3
          - file:
              credential-id: scapestack_creds
              variable: SCAPESTACKCREDS
          - file:
              credential-id: scapestack_cloud
              variable: SCAPESTACKCLOUD
