# Builds and releases latest snaps

- job-template:
    name: 'build-release-cdk-addons-{arch}-{version}'
    description: |
      Builds, releases and promotes cdk-addons for supported k8s versions on {arch} to the snapstore.
      Container images required by CDK are known during the build, so this job also tags and pushes
      those to the Canonical image registry.

      The full version of the cdk-addons snap is tied to the upstream k8s tag used during the build.
      Explicitly set this with the `k8s_tag` parameter, or this job will determine it using the
      `version` parameter and the contents of https://dl.k8s.io/release/[stable|latest]-`version`.txt.
    project-type: pipeline
    pipeline-scm:
      scm:
        - k8s-jenkins-jenkaas
      script-path: jobs/build-snaps/build-release-cdk-addons.groovy
    parameters:
      - string:
          name: arch
          default: '{arch}'
      - string:
          name: build_node
          default: 'runner-amd64-bigdisk'
      - string:
          name: version
          default: '{version}'
          description: |
            Version to build and release. This job will clone (or create as needed) the
            cdk-addons release-`version` branch, then build and release the snap to the
            `version`/edge channel.
      - string:
          name: k8s_tag
          default: ''
          description: |
            Source tag from https://github.com/kubernetes/kubernetes. If not specified,
            the tag will be set to https://dl.k8s.io/release/[stable|latest]-`version`.txt.
      - string:
          name: channels
          default: '{version}/edge,{version}/beta,{version}/candidate'
          description: |
            Comma separated snap store channels to release the built snap to.
      - bool:
          name: dry_run
          default: false
          description: only report what would be pushed to github / snapstore / image registry
    properties:
      - build-discarder:
          num-to-keep: 7
    triggers:
        - timed: "@daily"


- job:
    name: 'build-release-eks-snaps'
    node: runner-amd64
    description: |
      Builds, releases and promotes Amazon EKS snaps for {version} to the snapstore.

      If snapstore login fails due to an expired macaroon, run
      'snapcraft export-login ./snapcraft_cpc_creds' with credentials from LastPass,
      update the snapcraft_cpc_creds credential, and re-run the infrastructure jobs.
    project-type: freestyle
    scm:
      - k8s-jenkins-jenkaas
    wrappers:
      - default-job-wrapper
      - ci-creds
    builders:
      - set-env:
          JOB_SPEC_DIR: "jobs/build-snaps"
      - run-venv:
          JOB_SPEC_DIR: "jobs/build-snaps"
          COMMAND: |
            snapcraft logout
            snapcraft login --with /var/lib/jenkins/.config/snapcraft/snapcraft-cpc.cfg

            docker image prune -a --filter "until=24h" --force
            docker container prune --filter "until=24h" --force

            python jobs/build-snaps/build-eks-snaps.py build \
                 --version $VERSION \
                 --snap kubelet \
                 --snap kubectl \
                 --snap kube-proxy \
                 --snap kubernetes-test
            python jobs/build-snaps/build-eks-snaps.py push --version $VERSION

            docker image prune -a --filter "until=24h" --force
            docker container prune --filter "until=24h" --force
    parameters:
      - string:
          name: VERSION
          default: '1.14.8'
          description: snap eks version to build/promote
    properties:
      - build-discarder:
          num-to-keep: 2

- project:
    name: build-release-snaps
    arch: ['amd64']
    version: ['1.18', '1.19', '1.20', '1.21']
    jobs:
      - 'build-release-cdk-addons-{arch}-{version}'


# Builds and releases latest snaps
- job:
    name: 'build-snap-from-branch'
    node: runner-cloud
    description: |
      Builds a certain snap version from branch
    project-type: freestyle
    scm:
      - k8s-jenkins-jenkaas
    wrappers:
      - default-job-wrapper
      - ci-creds
    parameters:
      - global-params
      - string:
          name: BRANCH
          description: "MAJOR.MINOR.PATCH to build a snap from"
    builders:
      - set-env:
          JOB_SPEC_DIR: "jobs/sync-upstream"
      - run-tox:
          COMMAND: |
            #!/bin/bash
            IS_DRY_RUN=""
            if [[ $DRY_RUN = "true" ]]; then
              IS_DRY_RUN="--dry-run"
            fi
            tox -e py38 -- python jobs/sync-upstream/sync.py snap-from-branch --branch $BRANCH $IS_DRY_RUN
