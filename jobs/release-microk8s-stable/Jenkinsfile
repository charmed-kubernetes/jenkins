@Library('juju-pipeline@master') _

pipeline {
    agent {
        label "${params.build_node}"
    }
    /* XXX: Global $PATH setting doesn't translate properly in pipelines
     https://stackoverflow.com/questions/43987005/jenkins-does-not-recognize-command-sh
     */
    environment {
        PATH = '/snap/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin'
    }
    parameters {
        string(name: 'DRY_RUN', defaultValue: 'no', description: 'Do not release. Run all tests but do not release.')
        string(name: 'ALWAYS_RELEASE', defaultValue: 'no', description: 'This script will release only on a new patch release. Set this to "yes" if we need to release to beta even if the patch release number is the same.')
        string(name: 'TRACKS', defaultValue: '', description: 'The tracks you want to test and release. For example latest 1.10 1.11 1.12. Leave empty to iterate over all tracks.')
        string(name: 'TESTS_BRANCH', defaultValue: '', description: 'You might want to test with a set of tests that are in your own branch. Here is where you set the branch name.')
        string(name: 'PROXY', defaultValue: 'http://squid.internal:3128', description: 'Proxy endpoint')
    }
    options {
        ansiColor('xterm')
        timestamps()
        timeout(time: 4, unit: 'HOURS')
    }
    stages {
        stage('Setup') {
            steps {
                sh "snapcraft login --with /var/lib/jenkins/snapcraft-creds"
            }
        }
        stage('Release microk8s'){
            steps {
                dir('jobs') {
                    retry(3) {
                        sh "DRY_RUN=${params.DRY_RUN} ALWAYS_RELEASE=${params.ALWAYS_RELEASE} TRACKS=${params.TRACKS} TESTS_BRANCH=${params.TESTS_BRANCH} PROXY=${params.PROXY} tox -e py36 -- python3 microk8s/release-to-stable.py"
                    }
                }
            }
        }
    }
    /* We assume that there are no other lxc machines on the slave. */
    post {
        always {
            sh "snapcraft logout"
        }
        /* tearDownLxd will kill all lxc containers. It will kill any release-microk8s-beta jobs. */
        /* we make sure we cleanup all containers only when there is a potential of leaving back grabadge. */
        failure {
            tearDownLxd()
        }
        aborted {
            tearDownLxd()
        }
    }
}
