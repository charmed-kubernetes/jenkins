---
- hosts: all
#  connection: local
  gather_facts: yes
  become: true
  vars:
    s390x: "{{ lookup('env', 'S3LP3') }}"
    arm64: "{{ lookup('env', 'NEADER') }}"
    columbo_version: 0.0.4
  tasks:
    - name: add golang ppa
      apt_repository:
        repo: "ppa:longsleep/golang-backports"
      tags:
        - jenkins
    - name: update /etc/environment
      copy:
        src: "fixtures/environment"
        dest: /etc/environment
        owner: root
        group: root
        mode: 0644
        force: yes
      tags:
        - adhoc
    - name: set snap proxies
      shell: |
        snap set system proxy.http="http://squid.internal:3128"
        snap set system proxy.https="http://squid.internal:3128"
      tags:
        - adhoc
        - jenkins
    - sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
      tags:
        - jenkins
    - name: get machine arch
      shell: uname -m
      register: machine_arch
      tags:
        - adhoc
        - jenkins
    - name: install columbo
      shell: |
        wget https://github.com/charmed-kubernetes/columbo-go/releases/download/{{ columbo_version }}/columbo-go_{{ columbo_version }}_linux_{{ machine_arch.stdout }}.tar.gz
        tar xvf columbo-go_{{ columbo_version }}_linux_{{ machine_arch.stdout }}.tar.gz
        mv columbo /usr/local/bin
      tags:
        - adhoc
        - jenkins
    - name: install apt deps
      shell: |
        apt-get update
        apt-get install -qyf \
          build-essential \
          fakeroot \
          curl \
          dh-systemd \
          debhelper \
          default-jre \
          docker.io \
          expect-dev \
          file \
          flake8 \
          gcc \
          jq \
          language-pack-en-base \
          libffi-dev \
          libffi7 \
          libssl-dev \
          libuv1 \
          libxml2-dev \
          make \
          motd-news-config \
          parallel \
          python3-dev \
          python3-pip \
          python3.8 \
          python3.8-dev \
          python3.8-venv \
          redis-server \
          snapd \
          sosreport \
          squashfuse \
          strace \
          tox \
          tree \
          ubuntu-dev-tools \
          ubuntu-server \
          ubuntu-standard \
          unzip \
          uuid \
          virtualenv \
          wget \
          zlib1g-dev \
          tmpreaper
      tags:
        - jenkins
      ignore_errors: yes
    - name: remove unused debs
      shell: |
        sudo apt-get remove -qyf \
          python-pip \
          juju \
          lxd \
          lxd-client \
          lxcfs \
          lxc-common \
          liblxc1 \
          juju-wait \
          libsodium-dev \
          snapcraft
      tags:
        - jenkins
      ignore_errors: yes
    - name: upgrade charm
      command: "snap refresh charm --channel latest/edge"
      ignore_errors: yes
      tags:
        - jenkins
        - adhoc
    - name: upgrade charmcraft
      command: "snap refresh charmcraft --channel latest/edge"
      ignore_errors: yes
      tags:
        - jenkins
        - adhoc
    - name: upgrade juju
      command: "snap refresh juju --channel 2.9/stable --classic"
      ignore_errors: yes
      tags:
        - jenkins
        - adhoc
    - name: upgrade snapcraft
      command: "snap refresh snapcraft --channel 6.x/stable"
      ignore_errors: yes
      tags:
        - jenkins
        - adhoc
    - name: install snap deps
      command: "snap install {{item}}"
      ignore_errors: yes
      loop:
        - "aws-cli --classic"
        - "charm --classic --edge"
        - "charmcraft --classic --edge"
        - "go --classic --stable"
        - "juju --classic --channel=2.9/stable"
        - "juju-crashdump --classic --edge"
        - "juju-wait --classic"
        - "kubectl --classic"
        - "lxd"
        - "multipass"
        - "yq"
        - "snapcraft --classic"
      tags:
        - jenkins
        - adhoc
    - name: remove unneeded snaps
      command: "snap remove {{item}}"
      ignore_errors: yes
      loop:
        - "microk8s"
        - "bundletester"
        - "surl"
      tags:
        - jenkins
    - name: copy bashrc
      copy:
        src: "fixtures/bashrc"
        dest: /var/lib/jenkins/.bashrc
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      tags:
        - jenkins
    - name: create snapcraft config dir
      file:
        path: /var/lib/jenkins/.config/snapcraft
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755
      tags:
        - jenkins
    - name: Creates ssh dir
      file:
        path: /var/lib/jenkins/.ssh
        state: directory
      tags:
        - jenkins
    - name: ssh config
      template:
        src: "fixtures/ssh_config"
        dest: /var/lib/jenkins/.ssh/config
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      tags:
        - jenkins
    - name: copy charm creds
      copy:
        src: "{{ lookup('env', 'CHARMCREDS') }}"
        dest: /var/lib/jenkins/.go-cookies
        owner: jenkins
        group: jenkins
        mode: 0644
        force: no
      become: false
      tags:
        - jenkins
    - name: copy snapcraft creds
      copy:
        src: "{{ lookup('env', 'SNAPCRAFTCREDS') }}"
        dest: /var/lib/jenkins/snapcraft-creds
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      tags:
        - jenkins
    - name: copy ssh creds
      copy:
        src: "{{ lookup('env', 'CDKBOTSSHCREDS') }}"
        dest: /var/lib/jenkins/.ssh/cdkbot_rsa
        owner: jenkins
        group: jenkins
        mode: 0600
        force: yes
      tags:
        - jenkins
    - name: copy snapcraft cpc creds
      copy:
        src: "{{ lookup('env', 'SNAPCRAFTCPCCREDS') }}"
        dest: /var/lib/jenkins/.config/snapcraft/snapcraft-cpc.cfg
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      tags:
        - jenkins
    - name: create aws dir
      file:
        path: /var/lib/jenkins/.aws
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755
      tags:
        - jenkins
    - name: copy aws creds
      copy:
        src: "{{ lookup('env', 'AWSCREDS') }}"
        dest: /var/lib/jenkins/.aws/credentials
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      tags:
        - jenkins
    - name: create surl dir
      file:
        path: /var/lib/jenkins/snap/surl/common
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755
      tags:
        - jenkins
    - name: copy surl creds
      copy:
        src: "{{ lookup('env', 'SURLCREDS') }}"
        dest: /var/lib/jenkins/snap/surl/common/production-creds.surl
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      tags:
        - jenkins
    - name: create juju dir
      file:
        path: /var/lib/jenkins/.local/share/juju
        state: directory
        mode: 0755
      tags:
        - jenkins
    - name: copy juju credentials
      unarchive:
        src: "{{ lookup('env', 'JUJUCREDS') }}"
        dest: /var/lib/jenkins/.local/share/juju
      tags:
        - jenkins
    - name: copy juju clouds
      unarchive:
        src: "{{ lookup('env', 'JUJUCLOUDS') }}"
        dest: /var/lib/jenkins/.local/share/juju
      tags:
        - jenkins
    - name: copy sso creds
      copy:
        src: "{{ lookup('env', 'SSOCREDS') }}"
        dest: /var/lib/jenkins/.local/share/juju/store-usso-token
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: copy gpg public key
      copy:
        src: "{{ lookup('env', 'K8STEAMCI_GPG_PUB') }}"
        dest: /var/lib/jenkins/gpg-pub.key
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: copy gpg private key
      copy:
        src: "{{ lookup('env', 'K8STEAMCI_GPG_PRIVATE') }}"
        dest: /var/lib/jenkins/gpg-private.key
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: import gpg keys
      ignore_errors: yes
      shell: |
        gpg --import gpg-pub.key
        gpg --import gpg-private.key
    - name: set perms
      file:
        path: /var/lib/jenkins/.local/share/juju
        owner: jenkins
        group: jenkins
        recurse: yes
      tags:
        - jenkins
    - name: update jenkins user
      user:
        name: jenkins
        groups: docker,lxd
        append: yes
      tags:
        - jenkins
    - name: setup lxd network
      command: "/snap/bin/lxd init --auto"
      tags:
        - jenkins
      ignore_errors: yes
    - name: disable ipv6 in lxd
      command: "lxc network set {{item}} ipv6.address none"
      ignore_errors: yes
      loop:
        - 'lxdbr0'
        - 'lxdbr1'
      tags:
        - adhoc
        - jenkins
    - name: set lxd mtu
      command: "lxc network set {{item}} bridge.mtu 1458"
      ignore_errors: yes
      loop:
        - 'lxdbr0'
        - 'lxdbr1'
      tags:
        - adhoc
        - jenkins
    - name: set lxd proxy
      shell: |
        lxc config set core.proxy_http http://squid.internal:3128
        lxc config set core.proxy_https http://squid.internal:3128
        lxc config set core.proxy_ignore_hosts localhost
      tags:
        - adhoc
        - jenkins
    - name: set docker daemon config
      copy:
        src: "fixtures/docker.daemon.json"
        dest: /etc/docker/daemon.json
        force: yes
        owner: root
        group: root
      tags:
        - adhoc
        - jenkins
    - name: restart docker service
      service:
        name: docker
        state: restarted
      tags:
        - adhoc
        - jenkins
    - name: create scapestack dir
      file:
        path: /var/lib/jenkins/.scapestack
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755
      tags:
        - jenkins
    - name: copy scapestack creds
      copy:
        src: "{{ lookup('env', 'SCAPESTACKCREDS') }}"
        dest: /var/lib/jenkins/.scapestack/scapestack-creds
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: copy scapestack cloud creds
      copy:
        src: "{{ lookup('env', 'SCAPESTACKCLOUD') }}"
        dest: /var/lib/jenkins/.scapestack/scapestack-cloud
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: copy openstack creds
      copy:
        src: "{{ lookup('env', 'OPENSTACK_CREDS') }}"
        dest: /var/lib/jenkins/openstack-creds
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: login to snapstore
      command: "snapcraft login --with /var/lib/jenkins/snapcraft-creds"
      become: false
      tags:
        - jenkins
    - name: make sure workspace permissions are correct
      file:
        path: /var/lib/jenkins/slaves
        owner: jenkins
        group: jenkins
        recurse: yes
      ignore_errors: yes
      tags:
        - jenkins
    - name: make sure docker.sock permissions are correct
      file:
        path: /var/run/docker.sock
        owner: root
        group: docker
        mode: 0666
      ignore_errors: yes
      tags:
        - adhoc
        - jenkins
