#!/bin/bash
# shellcheck disable=SC2034,SC1090

set -x

###############################################################################
# INITIALIZE
###############################################################################
: "${WORKSPACE:=$(pwd)}"

. "$WORKSPACE/ci.bash"
. "$WORKSPACE/juju.bash"

###############################################################################
# FUNCTION OVERRIDES
###############################################################################
function juju::bootstrap::before
{
    # azure-cli
    which az || curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash -x
    which az
    ls -la /usr/bin/az
    az version || exit 1

    # helm
    which helm || sudo snap install helm --classic

    # sonobuoy
    rm -rf sonobuoy*
    SB_FILE="sonobuoy_${SONOBUOY_VERSION}_linux_${ARCH}.tar.gz"
    wget https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/${SB_FILE}
    tar xvf ${SB_FILE}
    rm -f ${SB_FILE}
}

function test::execute
{
    declare -n is_pass=$1

    mkdir -p $HOME/.kube
    juju scp -m $JUJU_CONTROLLER:$JUJU_MODEL kubernetes-master/0:config $HOME/.kube/
    kubectl version

    # prep azure env
    set +x
    source /var/lib/jenkins/.local/share/juju/azure-arc.sh
    az login --service-principal -u $CLIENT_ID -p $CLIENT_SECRET --tenant $TENANT_ID
    set -x
    az extension remove connectedk8s || true
    az extension remove k8sconfiguration || true
    az extension remove k8s-configuration || true
    az extension add --name connectedk8s
    az extension add --name k8s-configuration
    RESOURCE_GROUP=`az group list --query "[?location=='eastus']" | grep -o "${JUJU_MODEL}-.*" | sed -e 's/"//g' -e 's/,//g'`

    # https://github.com/Azure/azure-arc-validation/blob/main/conformance.yaml
    cat << EOF > ./arc-conformance.yaml
sonobuoy-config:
  driver: Job
  plugin-name: azure-arc-conformance
  result-format: junit
spec:
  image: arck8sconformance.azurecr.io/arck8sconformance:v0.1.0
  imagePullPolicy: Always
  name: plugin
  resources: {}
  volumeMounts:
  - mountPath: /tmp/results
    name: results
EOF
    ./sonobuoy version
    set +x
    ./sonobuoy run \
        --plugin ./arc-conformance.yaml \
        --plugin-env azure-arc-conformance.TENANT_ID=$TENANT_ID \
        --plugin-env azure-arc-conformance.SUBSCRIPTION_ID=$SUBSCRIPTION_ID \
        --plugin-env azure-arc-conformance.RESOURCE_GROUP=$RESOURCE_GROUP \
        --plugin-env azure-arc-conformance.CLUSTER_NAME=$CLUSTER_NAME \
        --plugin-env azure-arc-conformance.LOCATION=$LOCATION \
        --plugin-env azure-arc-conformance.CLIENT_ID=$CLIENT_ID \
        --plugin-env azure-arc-conformance.CLIENT_SECRET=$CLIENT_SECRET \
        --wait 2>&1
    ret=$?
    set -x

    is_pass="True"
    if (( $ret > 0 )); then
        is_pass="False"
    fi

    rm -f ./arc-conformance.yaml
    az logout
}

function test::capture
{
    ./sonobuoy retrieve
    mv *_sonobuoy*tar.gz artifacts.tar.gz
    # python bin/s3 cp "artifacts.tar.gz" artifacts.tar.gz || true
    tar tvf artifacts.tar.gz
}


###############################################################################
# ENV
###############################################################################
SONOBUOY_VERSION=0.20.0
SNAP_VERSION=${1:-1.20/stable}
# NB: bootstrap azure with bionic until juju-2.9
SERIES=${2:-bionic}
JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
JUJU_DEPLOY_CHANNEL=${3:-stable}
JUJU_CLOUD=azure/eastus
JUJU_CONTROLLER=validate-$(identifier::short)
JUJU_MODEL=validate-ck-arc
ARCH=${4:-amd64}
JOB_NAME_CUSTOM="validate-ck-arc-conformance-$SERIES-$SNAP_VERSION"
JOB_ID=$(identifier)


###############################################################################
# START
###############################################################################
ci::run
