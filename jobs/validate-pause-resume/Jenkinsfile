@Library('juju-pipeline@master') _

def juju_model = String.format("%s-%s", params.model, uuid())
def juju_controller = String.format("%s-%s", params.controller, uuid())

pipeline {
    agent {
        label 'runner-amd64'
    }
    /* XXX: Global $PATH setting doesn't translate properly in pipelines
     https://stackoverflow.com/questions/43987005/jenkins-does-not-recognize-command-sh
    */
    environment {
        PATH = "/snap/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin"
    }
    options {
        ansiColor('xterm')
        timestamps()
    }
    stages {
        stage('Deploy: K8s') {
            options {
                timeout(time: 1, unit: 'HOURS')
            }
            steps {
                sh "juju bootstrap ${params.cloud} ${juju_controller} --debug"
                setStartTime()
                deployCDK(controller: juju_controller,
                          model: juju_model,
                          bundle: "cs:~containers/${params.bundle}",
                          version_overlay: params.overlay,
                          bundle_channel: params.bundle_channel,
                          disable_wait: true)
                sh "juju-wait -e ${juju_controller}:${juju_model} -w"
            }
        }
        stage('Validate') {
            options {
                timeout(time: 5, unit: 'MINUTES')
            }
            steps {
                sh "juju run-action kubernetes-worker/0 pause --wait"
                sh "juju run-action kubernetes-worker/0 resume --wait"
            }
        }
    }
    post {
        failure {
            setFail()
        }
        success {
            setPass()
        }
        always {
            setEndTime()
            collectDebug(params.controller, juju_model)
        }
        cleanup {
            saveMeta()
            dir('jobs') {
                script {
                    sh "juju kill-controller -y ${juju_controller} || true"
                }
            }
        }
    }
}
